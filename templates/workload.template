{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Three node cluster with instances placed as specified in parameters",
    "Parameters": {
        "ContentAdminPassword": {
            "Description": "The password for the initial Admin user for Tableau server",
            "MinLength": "1",
            "NoEcho": "true",
            "Type": "String"
        },
        "ContentAdminUser": {
            "Default": "admin",
            "Description": "The name of the initial Admin user for Tableau server",
            "MinLength": "1",
            "Type": "String"
        },
        "InstallationBucket" : {
          "Description" : "The name of the S3 bucket from which to fetch installer executables",
          "Type" : "String",
          "MinLength" : "1"
        },
        "InstanceType" : {
          "Description" : "The AWS Instance Type to use for our servers",
          "Type" : "String",
          "MinLength" : "1"
        },
        "KeyPairName": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair used to get the Administrator password for the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrimaryAvailabilityZone": {
          "Description" : "The name of the Availability Zone for Primary server",
          "Type" : "AWS::EC2::AvailabilityZone::Name"
        },
        "PrimaryIp": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "ConstraintDescription": "IP address parameter must be in the form x.x.x.x",
            "Description": "Fixed IP for the primary server",
            "Type": "String"
        },
        "PrimarySubnetId": {
          "Description" : "The Id of the subnet for the Primary server",
          "Type" : "AWS::EC2::Subnet::Id"
        },
        "Worker1AvailabilityZone": {
          "Description" : "The name of the Availability Zone for Worker1 server",
          "Type" : "AWS::EC2::AvailabilityZone::Name"
        },
        "Worker1Ip": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "ConstraintDescription": "IP address parameter must be in the form x.x.x.x",
            "Description": "Fixed IP for the worker1 server",
            "Type": "String"
        },
        "Worker1SubnetId": {
          "Description" : "The Id of the subnet for the Worker1 server",
          "Type" : "AWS::EC2::Subnet::Id"
        },
        "Worker2AvailabilityZone": {
          "Description" : "The name of the Availability Zone for Worker2 server",
          "Type" : "AWS::EC2::AvailabilityZone::Name"
        },
        "Worker2Ip": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "ConstraintDescription": "IP address parameter must be in the form x.x.x.x",
            "Description": "Fixed IP for the worker2 server",
            "Type": "String"
        },
        "Worker2SubnetId": {
          "Description" : "The Id of the subnet for the Worker2 server",
          "Type" : "AWS::EC2::Subnet::Id"
        },
        "RegCity": {
            "Description": "City",
            "Type": "String"
        },
        "RegCompany": {
            "Description": "Company",
            "Type": "String"
        },
        "RegCountry": {
            "Description": "Country",
            "Type": "String"
        },
        "RegDepartment": {
            "Description": "Department",
            "Type": "String"
        },
        "RegEmail": {
            "Description": "Email",
            "MinLength": "1",
            "Type": "String"
        },
        "RegFirstName": {
            "Description": "First Name",
            "MinLength": "1",
            "Type": "String"
        },
        "RegIndustry": {
            "Description": "Industry",
            "Type": "String"
        },
        "RegLastName": {
            "Description": "Last Name",
            "MinLength": "1",
            "Type": "String"
        },
        "RegPhone": {
            "Description": "Phone",
            "Type": "String"
        },
        "RegState": {
            "Description": "State",
            "Type": "String"
        },
        "RegTitle": {
            "Description": "Title",
            "Type": "String"
        },
        "RegZip": {
            "Description": "ZIP/Postal Code",
            "Type": "String"
        },
        "TableauServerLicenseKey": {
            "Description": "License Key",
            "MinLength": "1",
            "Type": "String"
        },
        "TableauServerPrimaryInstaller": {
            "Description": "Name of primary installer",
            "MinLength": "1",
            "Type": "String"
        },
        "TableauServerWorkerInstaller": {
            "Description": "Name of worker installer",
            "MinLength": "1",
            "Type": "String"
        },
        "VpcId": {
            "Description": "ID of the VPC",
            "Type": "AWS::EC2::VPC::Id"
        },
        "WindowsAMIId" : {
            "Description": "Name of AMI containing Windows OS",
            "Type": "AWS::EC2::Image::Id"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "AWS Environment"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "InstallationBucket",
                        "WindowsAMIId",
                        "InstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Installer Files"
                    },
                    "Parameters": [
                        "TableauServerPrimaryInstaller",
                        "TableauServerWorkerInstaller"
                    ]
                },
                {
                    "Label": {
                        "default": "Server Setup"
                    },
                    "Parameters": [
                        "VpcId",
                        "PrimaryIp",
                        "PrimaryAvailabilityZone",
                        "PrimarySubnetId",
                        "Worker1Ip",
                        "Worker1AvailabilityZone",
                        "Worker1SubnetId",
                        "Worker2Ip",
                        "Worker2AvailabilityZone",
                        "Worker2SubnetId"
                    ]
                },
                {
                    "Label": {
                        "default": "Configure Initial Tableau Admin User"
                    },
                    "Parameters": [
                        "ContentAdminUser",
                        "ContentAdminPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Registration"
                    },
                    "Parameters": [
                        "TableauServerLicenseKey",
                        "RegFirstName",
                        "RegLastName",
                        "RegEmail",
                        "RegCompany",
                        "RegTitle",
                        "RegDepartment",
                        "RegIndustry",
                        "RegPhone",
                        "RegCity",
                        "RegState",
                        "RegZip",
                        "RegCountry"
                    ]
                }
            ],
            "ParameterLabels": {
                "InstallationBucket": {
                    "default": "s3 Bucket from which to get installation files"
                },
                "InstanceType": {
                    "default": "Instance Type to use for servers"
                },
                "KeyPairName": {
                    "default": "EC2 keypair"
                },
                "ContentAdminUser": {
                    "default": "Portal admin username"
                },
                "ContentAdminPassword": {
                    "default": "Portal admin password"
                },
                "PrimaryAvailabilityZone": {
                    "default": "AZ for Primary server"
                },
                "PrimaryIp": {
                    "default": "Primary Server IP"
                },
                "PrimarySubnetId": {
                    "default": "Primary Server Subnet Id"
                },
                "Worker1AvailabilityZone": {
                    "default": "AZ for Worker1 server"
                },
                "Worker1Ip": {
                    "default": "Worker1 IP"
                },
                "Worker1SubnetId": {
                    "default": "Worker1 Server Subnet Id"
                },
                "Worker2AvailabilityZone": {
                    "default": "AZ for Worker2 server"
                },
                "Worker2Ip": {
                    "default": "Worker2 IP"
                },
                "Worker2SubnetId": {
                    "default": "Worker2 Server Subnet Id"
                },
                "RegFirstName": {
                    "default": "First Name"
                },
                "RegLastName": {
                    "default": "Last name"
                },
                "RegEmail": {
                    "default": "Email Address"
                },
                "RegCompany": {
                    "default": "Company"
                },
                "RegTitle": {
                    "default": "Title"
                },
                "RegDepartment": {
                    "default": "Department"
                },
                "RegIndustry": {
                    "default": "Industry"
                },
                "RegPhone": {
                    "default": "Phone"
                },
                "RegCity": {
                    "default": "City"
                },
                "RegState": {
                    "default": "State"
                },
                "RegZip": {
                    "default": "Zip/Postal Code"
                },
                "RegCountry": {
                    "default": "Country"
                },
                "TableauServerLicenseKey": {
                    "default": "Tableau Activation Key"
                },
                "TableauServerPrimaryInstaller": {
                    "default": "Tableau Server Installer Executable"
                },
                "TableauServerWorkerInstaller": {
                    "default": "Tableau Worker Installer Executable"
                },
                "VpcId": {
                    "Description": "ID of the VPC",
                }
                "WindowsAMIId": {
                    "default": "AMI ID for base Windows installation"
                }
            }
        }
    },
    "Resources": {
        "WorkloadSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn" : [ 
                "VPCStack",
                "BastionHost"
            ],
            "Properties": {
                "GroupDescription": "Enable RDP and Web traffic from the bastion to private hosts, and all traffic between private hosts: TODO bastion and LB",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "InternalSecurityGroup"
                    }
                ],
                "VpcId": {
                    "Ref" : "VpcId"
                }
            }
        },
        "WorkloadSecurityGroupMutualIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "DependsOn" : [
                "WorkloadSecurityGroup"
            ],
            "Properties" : {
                "GroupId" : { 
                    "Ref" : "InternalSecurityGroup"
                },
                "IpProtocol": "-1",
                "SourceSecurityGroupId" : { 
                    "Ref" : "WorkloadSecurityGroup"
                }
            }
        },
        "PrimaryHost": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
                "TableauWorkerWaitCondition"
            ],
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                        },
                        "commands": {
                            "1-disable-firewall": {
                                "cwd": "c:\\Windows\\System32",
                                "command": "netsh advfirewall set allprofiles state off",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": {
                    "Ref": "WindowsAMIId"
                },
                "AvailabilityZone": {
                    "Ref": "PrimaryAvailabilityZone"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "WorkloadSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SubnetId": {
                    "Ref": "PrimarySubnetId"
                },
                "PrivateIpAddress": { "Ref": "PrimaryIp" },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "<script>",
                                {
                                    "Fn::Sub": "cfn-init.exe -v -s ${AWS::StackId} -r PrimaryHost --region ${AWS::Region}"
                                },
                                {
                                    "Fn::Sub": [
                                        "cfn-signal.exe -e %errorlevel% ${WHUrl}",
                                        {
                                            "WHUrl": {
                                                "Fn::Base64": {
                                                    "Ref": "TableauPrimaryWaitHandle"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "</script>"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-primary"
                        }
                    }
                ]
            }
        },
        "WorkerHost1": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
            ],
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                        },
                        "commands": {
                            "1-disable-firewall": {
                                "cwd": "c:\\Windows\\System32",
                                "command": "netsh advfirewall set allprofiles state off",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": {
                    "Ref": "WindowsAMIId"
                },
                "AvailabilityZone": {
                    "Ref": "Worker1AvailabilityZone"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "WorkloadSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SubnetId": {
                    "Ref": "Worker1SubnetId"
                },
                "PrivateIpAddress": { 
                    "Ref": "Worker1Ip" 
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "<script>",
                                {
                                    "Fn::Sub": "cfn-init.exe -v -s ${AWS::StackId} -r WorkerHost1 --region ${AWS::Region}"
                                },
                                {
                                    "Fn::Sub": [
                                        "cfn-signal.exe -e %errorlevel% ${WHUrl}",
                                        {
                                            "WHUrl": {
                                                "Fn::Base64": {
                                                    "Ref": "TableauWorkerWaitHandle"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "</script>"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-worker-1"
                        }
                    }
                ]
            }
        },
        "WorkerHost2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": [
            ],
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                        },
                        "commands": {
                            "1-disable-firewall": {
                                "cwd": "c:\\Windows\\System32",
                                "command": "netsh advfirewall set allprofiles state off",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": {
                    "Ref": "WindowsAMIId"
                },
                "AvailabilityZone": {
                    "Ref": "Worker2AvailabilityZone"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "WorkloadSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "SubnetId": {
                    "Ref": "Worker2SubnetId"
                },
                "PrivateIpAddress": { 
                    "Ref": "Worker2Ip"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "<script>",
                                {
                                    "Fn::Sub": "cfn-init.exe -v -s ${AWS::StackId} -r WorkerHost2 --region ${AWS::Region}"
                                },
                                {
                                    "Fn::Sub": [
                                        "cfn-signal.exe -e %errorlevel% ${WHUrl}",
                                        {
                                            "WHUrl": {
                                                "Fn::Base64": {
                                                    "Ref": "TableauWorkerWaitHandle"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "</script>"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-worker-2"
                        }
                    }
                ]
            }
        },
        "TableauWorkerWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "TableauWorkerWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Properties": {
                "Handle": {
                    "Ref": "TableauWorkerWaitHandle"
                },
                "Count": "2",
                "Timeout": "1800"
            }
        },
        "TableauPrimaryWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "TableauPrimaryWaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Properties": {
                "Handle": {
                    "Ref": "TableauPrimaryWaitHandle"
                },
                "Count": "1",
                "Timeout": "5400"
            }
        },
    },
    "Outputs": {
        "PrimaryHost": {
            "Description" : "Primary Server Host",
            "Value" : { "Ref" : "PrimaryHost" }
        },
        "WorkerHost1": {
            "Description" : "Worker1 Server Host",
            "Value" : { "Ref" : "WorkerHost1" }
        },
        "WorkerHost2": {
            "Description" : "Worker2 Server Host",
            "Value" : { "Ref" : "WorkerHost2" }
        },
        "PrimaryInstanceId": {
            "Description": "Instance ID of Primary Server",
            "Value": { "Ref" : "PrimaryHost" }
        },
        "PrimarySubnetId": {
            "Description": "Instance ID of Primary Server",
            "Value": { "Ref" : "PrimarySubnetId" }
        },
        "Worker1InstanceId": {
            "Description": "Instance ID of Worker1 Server",
            "Value": { "Ref" : "WorkerHost1" }
        },
        "Worker1SubnetId": {
            "Description": "Instance ID of Primary Server",
            "Value": { "Ref" : "Worker1SubnetId" }
        },
        "Worker2InstanceId": {
            "Description": "Instance ID of Worker2 Server",
            "Value": { "Ref" : "WorkerHost2" }
        },
        "Worker2SubnetId": {
            "Description": "Instance ID of Primary Server",
            "Value": { "Ref" : "Worker2SubnetId" }
        },
        "SecurityGroup" : {
            "Description": "The security group the instances belong to",
            "Value": { "Ref" : "WorkloadSecurityGroup" }
        }
    }
}
