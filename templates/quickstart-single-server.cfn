{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS QuickStart Template for Tableau Server instance running on Windows",

  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair used to get the Administrator password for the instance",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "ResourceAvailabilityZone" : {
        "Description" : "The availability zone in which our server and storage volume reside",
        "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "SourceCidr" : {
      "Description" : "CIDR from which you may connect to web interface or bastion host (e.g., 1.1.1.1/32)",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default": "0.0.0.0/32",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "ContentAdminUser" : {
      "Description" : "The name of the initial Admin user for Tableau server",
      "Type" : "String",
      "Default" : "admin",
      "MinLength" : "1"
    },
    "ContentAdminPassword" : {
      "Description" : "The password for the initial Admin user for Tableau server",
      "Type" : "String",
      "MinLength" : "1",
      "NoEcho" : "true"
    },
    "TableauServerLicenseKey" : {
      "Description" : "License Key (leave blank for trial)",
      "Type" : "String"
    },
    "RegFirstName" : {
      "Description" : "First Name",
      "Type" : "String",
      "MinLength" : "1"
    },
    "RegLastName" : {
      "Description" : "Last Name",
      "Type" : "String",
      "MinLength" : "1"
    },
    "RegEmail" : {
      "Description" : "Email",
      "Type" : "String",
      "MinLength" : "1"
    },
    "RegCompany" : {
      "Description" : "Company",
      "Type" : "String"
    },
    "RegTitle" : {
      "Description" : "Title",
      "Type" : "String"
    },
    "RegDepartment" : {
      "Description" : "Department",
      "Type" : "String"
    },
    "RegIndustry" : {
      "Description" : "Industry",
      "Type" : "String"
    },
    "RegPhone" : {
      "Description" : "Phone",
      "Type" : "String"
    },
    "RegCity" : {
      "Description" : "City",
      "Type" : "String"
    },
    "RegState" : {
      "Description" : "State",
      "Type" : "String"
    },
    "RegZip" : {
      "Description" : "ZIP/Postal Code",
      "Type" : "String"
    },
    "RegCountry" : {
      "Description" : "Country",
      "Type" : "String"
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
            "Label" : { "default" : "AWS Environment" },
            "Parameters" : ["KeyName","ResourceAvailabilityZone","SourceCidr"]
        },
        {
            "Label" : { "default" : "Configure Initial Tableau Admin User" },
            "Parameters" : ["ContentAdminUser","ContentAdminPassword"]
        },
        {
            "Label" : { "default" : "Registration" },
            "Parameters" : [ "TableauServerLicenseKey", "RegFirstName","RegLastName","RegEmail",
                             "RegCompany","RegTitle","RegDepartment","RegIndustry",
                             "RegPhone","RegCity","RegState","RegZip","RegCountry"]
        }
      ],
      "ParameterLabels" : {
        "KeyName": {
            "default": "EC2 keypair"
        },
        "ResourceAvailabilityZone": {
            "default": "Target AZ"
        },
        "SourceCidr": {
            "default": "Source CIDR for access"
        },
        "ContentAdminUser": {
            "default": "Portal admin username"
        },
        "ContentAdminPassword": {
            "default": "Portal admin password"
        },
        "TableauServerLicenseKey": {
            "default": "Tableau Activation Key"
        },
        "RegFirstName": {
            "default": "First Name"
        },
        "RegLastName": {
            "default": "Last name"
        },
        "RegEmail": {
            "default": "Email Address"
        },
        "RegCompany": {
            "default": "Company"
        },
        "RegTitle": {
            "default": "Title"
        },
        "RegDepartment": {
            "default": "Department"
        },
        "RegIndustry": {
            "default": "Industry"
        },
        "RegPhone": {
            "default": "Phone"
        },
        "RegCity": {
            "default": "City"
        },
        "RegState": {
            "default": "State"
        },
        "RegZip": {
            "default": "Zip/Postal Code"
        },
        "RegCountry": {
            "default": "Country"
        }
      }
    }
  },
  "Mappings" : {
    "AWSRegion2AMI" : {
      "us-east-1"        : { "Windows2012r2" : "ami-ee7805f9"},
      "us-west-2"        : { "Windows2012r2" : "ami-2827f548"},
      "us-west-1"        : { "Windows2012r2" : "ami-c06b24a0"}
    },
    "DefaultConfiguration" : {
        "TableauServerConfig" : {
            "GatewayPort" : "80",
            "BackgrounderProcs" : "2",
            "CacheServerProcs" : "2",
            "DataEngineProcs" : "1",
            "DataServerProcs" : "2",
            "VizPortalProcs" : "1",
            "VizqlServerProcs" : "1"
        },
        "InstallationConfig" : {
            "InstallationBucket" : "tableau-server-installer",
            "InstallationExecutable" : "Setup-Server-x64.exe"
        },
        "MachineConfiguration" : {
            "InstanceType" : "m4.4xlarge",
            "VolumeSize" : 100,
            "WindowsVersion" : "Windows2012r2"
        }
    }
  },
  "Conditions" : {
    "IsTrial" : {
        "Fn::Equals" : ["", { "Ref" : "TableauServerLicenseKey" } ]
    }
  },
  "Resources" : {
    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable RDP",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "SourceCidr" }},
          {"IpProtocol" : "tcp", "FromPort" : { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "GatewayPort"]}, "ToPort" : { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "GatewayPort"]}, "CidrIp" : { "Ref" : "SourceCidr" }}
        ]
      }
    },
    "S3ReadOnlyRole" : {
        "Type" : "AWS::IAM::Role",
        "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [{
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               }]
            },
            "Policies" : [
                {
                    "PolicyName" : "s3readonlyaccess",
                    "PolicyDocument" : {
                        "Statement": [
                            {
                              "Effect": "Allow",
                              "Action": ["s3:GetObject"],
                              "Resource": {"Fn::Join" : ["", ["arn:aws:s3:::", 
                                                        { "Fn::FindInMap" : [ "DefaultConfiguration", "InstallationConfig", "InstallationBucket"]}, 
                                                        "/*" ]]}
                            },
                            {
                              "Effect": "Allow",
                              "Action": [ "s3:ListBucket"],
                              "Resource": {"Fn::Join" : ["", ["arn:aws:s3:::", { "Fn::FindInMap" : [ "DefaultConfiguration", "InstallationConfig", "InstallationBucket"]}]]}
                            }
                          ]
                    }
                }
            ]
        }
    },
    "TableauWindowsServerInstanceProfile" : {
        "Type" : "AWS::IAM::InstanceProfile",
        "DependsOn" : ["S3ReadOnlyRole"],
        "Properties": {
            "Path":"/",
            "Roles": [ { "Ref" : "S3ReadOnlyRole" } ]
        }
    },
    "TableauWindowsServer": {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : ["TableauWindowsServerInstanceProfile", "InstanceSecurityGroup"],
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "c:\\tabsetup\\json2yml.py" : {
                "content" : { "Fn::Join" : ["\n", [
                        "import sys",
                        "import yaml",
                        "import json",
                        "config_data = json.load(sys.stdin)",
                        "for k,v in config_data.items():",
                        "    if v.startswith('INTEGER:'):",
                        "        newvalue = v[len('INTEGER:'):]",
                        "        config_data[k] = int(newvalue)",
                        "    elif v.startswith('FLOAT:'):",
                        "        newvalue = v[len('FLOAT:'):]",
                        "        config_data[k] = float(newvalue)",
                        "yaml.safe_dump(config_data, sys.stdout, default_flow_style=False)",
                        ""
                    ]]
                }
              },
              "c:\\tabsetup\\secrets.json" : {
                "content" : {
                    "content_admin_user" : {"Ref" : "ContentAdminUser"},
                    "content_admin_pass" : {"Ref" : "ContentAdminPassword"}
                }
              },
              "c:\\tabsetup\\registration.json" : {
                "content" : {
                    "first_name" : {"Ref" : "RegFirstName"},
                    "last_name" : {"Ref" : "RegLastName"},
                    "email" : {"Ref" : "RegEmail"},
                    "company" : { "Fn::Join" : [";", [{"Ref" : "RegCompany"}, "AWSQuickStart" ]] },
                    "title" : {"Ref" : "RegTitle"},
                    "department" : {"Ref" : "RegDepartment"},
                    "industry" : {"Ref" : "RegIndustry"},
                    "phone" : {"Ref" : "RegPhone"},
                    "city" : {"Ref" : "RegCity"},
                    "state" : {"Ref" : "RegState"},
                    "zip" : {"Ref" : "RegZip"},
                    "country" : {"Ref" : "RegCountry"}
                }
              },
              "c:\\tabsetup\\config.json" : {
                "content" : {
                    "config.version" : "16",
                    "worker0.gateway.port"       : {"Fn::Join" : ["", ["INTEGER:", { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "GatewayPort"]} ]] },
                    "worker0.backgrounder.procs" : {"Fn::Join" : ["", ["INTEGER:", { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "BackgrounderProcs"]} ]] },
                    "worker0.cacheserver.procs"  : {"Fn::Join" : ["", ["INTEGER:", { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "CacheServerProcs"]} ]] },
                    "worker0.dataengine.procs"   : {"Fn::Join" : ["", ["INTEGER:", { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "DataEngineProcs"]} ]] },
                    "worker0.dataserver.procs"   : {"Fn::Join" : ["", ["INTEGER:", { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "DataServerProcs"]} ]] },
                    "worker0.vizportal.procs"    : {"Fn::Join" : ["", ["INTEGER:", { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "VizPortalProcs"]} ]] },
                    "worker0.vizqlserver.procs"  : {"Fn::Join" : ["", ["INTEGER:", { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "VizqlServerProcs"]} ]] }
                }
              },
              "c:\\tabsetup\\ScriptedInstaller.py" : {
                "source": { "Fn::Join" : [ "", ["https://", 
                                                { "Fn::FindInMap" : [ "DefaultConfiguration", "InstallationConfig", "InstallationBucket"]}, 
                                                ".s3.amazonaws.com/ScriptedInstaller.py"]]}
              },
              "c:\\tabsetup\\python-2.7.12.msi" : {
                "source": "https://www.python.org/ftp/python/2.7.12/python-2.7.12.msi"
              },
              "c:\\tabsetup\\tableau-server-installer.exe" : {
                "source": { "Fn::Join" : [ "", ["https://", 
                                                { "Fn::FindInMap" : [ "DefaultConfiguration", "InstallationConfig", "InstallationBucket"]} , 
                                                ".s3.amazonaws.com/",  
                                                { "Fn::FindInMap" : [ "DefaultConfiguration", "InstallationConfig", "InstallationExecutable"]}]]}
              },
              "c:\\tabsetup\\send-done-signal.cmd" : {
                "content" : { "Fn::Join" : ["\n", [
                    "@echo off",
                    "if not exist c:\\tabsetup\\installer-output.txt goto no_installer_output",
                    "SetLocal EnableDelayedExpansion",
                    "set content=",
                    "for /F \"delims=\" %%i in (c:\\tabsetup\\installer-output.txt) do set content=!content! %%i",
                    { "Fn::Sub" : ["cfn-signal.exe --reason \"Installer failed\" --data \"%content%\" -e %1 ${WHUrl}",
                            {
                                "WHUrl" : { "Fn::Base64" : { "Ref" : "TableauServerWaitHandle"}}
                            }]
                    },
                    "EndLocal",
                    "goto alldone",
                    ":no_installer_output",
                    { "Fn::Sub" : ["cfn-signal.exe -e %1 ${WHUrl}",
                            {
                                "WHUrl" : { "Fn::Base64" : { "Ref" : "TableauServerWaitHandle"}}
                            }]
                    },
                    ":alldone",
                    "exit /B %1"
                ]]}
              }
            },
            "commands" : {
              "1-install-python" : {
                "command" : "c:\\tabsetup\\python-2.7.12.msi /quiet /qn",
                "cwd" : "c:\\tabsetup",
                "waitAfterCompletion" : "0"
              },
              "2-pip-install-yaml" : {
                "command" : "c:\\Python27\\Scripts\\pip.exe install pyyaml",
                "cwd" : "c:\\Python27\\Scripts",
                "waitAfterCompletion" : "0"
              },
              "3-convert-config" : {
                "cwd" : "c:\\tabsetup",
                "command" : "type config.json | c:\\Python27\\python json2yml.py > config.yml",
                "waitAfterCompletion" : "0"
              },
              "4-run-installer" : {
                "cwd" : "c:\\tabsetup",
                "command" : { "Fn::Join" : [ " ", [
                  "c:\\Python27\\python.exe",
                  "ScriptedInstaller.py", "install",
                  "--installerLog", "C:\\tabsetup\\tabinstall.txt",
                  "--installDir C:\\TableauServer",
                  "--enablePublicFwRule",
                  "--secretsFile c:\\tabsetup\\secrets.json",
                  "--configFile c:\\tabsetup\\config.yml",
                  "--registrationFile c:\\tabsetup\\registration.json",
                  { "Fn::If" : [ "IsTrial", 
                        "--trialLicense", 
                        {"Fn::Sub" : "--licenseKey ${TableauServerLicenseKey}" }
                    ]
                  },
                  "c:\\tabsetup\\tableau-server-installer.exe",
                  " > c:\\tabsetup\\installer-output.txt 2>&1"
                  ]]
                },
                "waitAfterCompletion" : "0"
              },
              "5-cleanup-secrets" : {
                "cwd" : "c:\\tabsetup",
                "command" : "del c:\\tabsetup\\secrets.json",
                "waitAfterCompletion" : "0"
              }
            }
          }
        },
        "AWS::CloudFormation::Authentication": {
            "S3AccessRole" : {
                "type": "S3",
                "buckets": [ { "Fn::FindInMap" : [ "DefaultConfiguration", "InstallationConfig", "InstallationBucket"]} ],
                "roleName": { "Ref": "S3ReadOnlyRole" }
            }
        }
      },
      
      "Properties": {
        "InstanceType" : { "Fn::FindInMap" : [ "DefaultConfiguration", "MachineConfiguration", "InstanceType"]},
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "DefaultConfiguration", "MachineConfiguration", "WindowsVersion"]} ]},
        "AvailabilityZone" : { "Ref" : "ResourceAvailabilityZone" },
        "BlockDeviceMappings" : [
           { 
            "DeviceName" : "/dev/sda1",
            "Ebs" : { "VolumeSize" : { "Fn::FindInMap" : [ "DefaultConfiguration", "MachineConfiguration", "VolumeSize"]} }
           }
        ],
        "SecurityGroups" : [ {"Ref" : "InstanceSecurityGroup"} ],
        "IamInstanceProfile" : { "Ref" : "TableauWindowsServerInstanceProfile" },
        "KeyName" : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["\n", [
            "<script>",
            { "Fn::Sub" : "cfn-init.exe -v -s ${AWS::StackId} -r TableauWindowsServer --region ${AWS::Region}"},
            "c:\\tabsetup\\send-done-signal.cmd %errorlevel%",
             "</script>"
        ]]}},
        "Tags": [
            {
                "Key" : "Name",
                "Value" : {"Fn::Sub" : "${AWS::StackName}-cfn-tableau-server"}
            }
        ]
        }
    },
    "TableauServerWaitHandle" : {
        "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "TableauServerWaitCondition" : {
        "Type" : "AWS::CloudFormation::WaitCondition",
        "Properties" : {
            "Handle" : { "Ref" : "TableauServerWaitHandle" },
            "Timeout" : "3600"
        }
    }
  },
  "Outputs" : {
    "InstanceID" : {
        "Description" : "EC2 InstanceID of the instance running Tableau Server",
        "Value" : { "Ref" : "TableauWindowsServer" }
    },
    "PublicIpAddress" : {
        "Description" : "Public IP Address of instance running Tableau Server",
        "Value" : { "Fn::GetAtt" : [ "TableauWindowsServer", "PublicIp"]}
    },
    "PublicDNSName" : {
        "Description" : "Public DNS name of instance running Tableau Server",
        "Value" : { "Fn::GetAtt" : [ "TableauWindowsServer", "PublicDnsName"]}
    },
    "PublicGatewayPort" : {
        "Description" : "The port serving web traffic on the public interface of Tableau Server",
        "Value" : { "Fn::FindInMap" : [ "DefaultConfiguration", "TableauServerConfig", "GatewayPort"]}
    },
  }    
}
