{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "A load balancer for number of instances",
    "Parameters": {
        "LoadBalancerPublicSubnets": {
            "Description": "The public subnets on which to place the load balancer",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "SourceCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "CIDR from which you may connect to web interface",
            "Type": "String"
        },
        "SSLCertificateARN": {
            "Default": "",
            "Description": "The Amazon Resource Name for the existing SSL cert you wish to use; empty for none",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Load Balancer Information"
                    },
                    "Parameters": [
                        "LoadBalancerPublicSubnets",
                        "SourceCIDR",
                        "SSLCertificateARN",
                        "VPCID"
                    ]
                }
            ],
            "ParameterLabels": {
                "LoadBalancerPublicSubnets": {
                    "default": "Public subnets on which to place this load balancer"
                },
                "SourceCIDR": {
                    "default": "CIDR describing who can reach this load balancer"
                },
                "SSLCertificateARN": {
                    "default": "SSL cert (if any) to attach to this load balancer"
                },
                "VPCID": {
                    "default": "The VPC id in which to create this load balancer"
                }
            }
        }
    },
    "Conditions": {
        "NoSSLCertficate": {
            "Fn::Equals": [
                "",
                {
                    "Ref": "SSLCertificateARN"
                }
            ]
        },
        "HasSSLCertificate": {
            "Fn::Not": [
                {
                    "Condition": "NoSSLCertficate"
                }
            ]
        }
    },
    "Resources": {
        "LoadBalancerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable Web traffic",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": {
                            "Fn::If": [
                                "HasSSLCertificate",
                                "443",
                                "80"
                            ]
                        },
                        "ToPort": {
                            "Fn::If": [
                                "HasSSLCertificate",
                                "443",
                                "80"
                            ]
                        },
                        "CidrIp": {
                            "Ref": "SourceCIDR"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "LoadBalancerSecurityGroup"
                    }
                ],
                "VpcId": {
                    "Ref": "VPCID"
                }
            }
        },
        "ServerLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "DependsOn": [
                "LoadBalancerSecurityGroup"
            ],
            "Properties": {
                "Scheme": "internet-facing",
                "Subnets": {
                    "Ref": "LoadBalancerPublicSubnets"
                },
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ],
                "Listeners": [
                    {
                        "Protocol": {
                            "Fn::If": [
                                "HasSSLCertificate",
                                "HTTPS",
                                "HTTP"
                            ]
                        },
                        "LoadBalancerPort": {
                            "Fn::If": [
                                "HasSSLCertificate",
                                "443",
                                "80"
                            ]
                        },
                        "InstanceProtocol": "HTTP",
                        "InstancePort": "80",
                        "SSLCertificateId": {
                            "Fn::If": [
                                "HasSSLCertificate",
                                {
                                    "Ref": "SSLCertificateARN"
                                },
                                {
                                    "Ref": "AWS::NoValue"
                                }
                            ]
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-cfn-lb"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Id": {
            "Description": "Load Balancer Id",
            "Value": {
                "Ref": "ServerLoadBalancer"
            }
        },
        "SecurityGroup": {
            "Description": "Load Balancer SecurityGroup",
            "Value": {
                "Ref": "LoadBalancerSecurityGroup"
            }
        },
        "CanonicalHostedZoneNameID": {
            "Value": {
                "Fn::GetAtt": [
                    "ServerLoadBalancer",
                    "CanonicalHostedZoneNameID"
                ]
            }
        },
        "DNSName": {
            "Description": "Direct DNS name of load balancer",
            "Value": {
                "Fn::GetAtt": [
                    "ServerLoadBalancer",
                    "DNSName"
                ]
            }
        }
    }
}
